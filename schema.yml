openapi: 3.0.3
info:
  title: Furai API
  version: 1.0.0
  description: Furai car rental's API
paths:
  /auth/email/:
    post:
      operationId: auth_email_create
      description: This returns a 6-digit callback token we can trade for a user's
        Auth Token.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailAuth'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailAuth'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailAuth'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailAuth'
          description: ''
  /auth/mobile/:
    post:
      operationId: auth_mobile_create
      description: This returns a 6-digit callback token we can trade for a user's
        Auth Token.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MobileAuth'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MobileAuth'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MobileAuth'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobileAuth'
          description: ''
  /auth/token/:
    post:
      operationId: auth_token_create
      description: |-
        This is a duplicate of rest_framework's own ObtainAuthToken method.
        Instead, this returns an Auth Token based on our callback token and source.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallbackTokenAuth'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CallbackTokenAuth'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CallbackTokenAuth'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallbackTokenAuth'
          description: ''
  /auth/verify/:
    post:
      operationId: auth_verify_create
      description: |-
        This verifies an alias on correct callback token entry using the same logic as auth.
        Should be refactored at some point.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallbackTokenVerification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CallbackTokenVerification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CallbackTokenVerification'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallbackTokenVerification'
          description: ''
  /auth/verify/email/:
    post:
      operationId: auth_verify_email_create
      description: This returns a 6-digit callback token we can trade for a user's
        Auth Token.
      tags:
      - auth
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /auth/verify/mobile/:
    post:
      operationId: auth_verify_mobile_create
      description: This returns a 6-digit callback token we can trade for a user's
        Auth Token.
      tags:
      - auth
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /bookings:
    get:
      operationId: bookings_list
      description: List all bookings related to a customer
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - bookings
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBookingList'
          description: ''
    post:
      operationId: bookings_create
      description: |-
        Create a new booking.
        Automatically create the user if none associated to the email.
        Automatically create/update a customer with payload infos.
      tags:
      - bookings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Booking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Booking'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Booking'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
          description: ''
  /car-features:
    get:
      operationId: car_features_list
      description: List car features
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - car-features
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCarFeatureList'
          description: ''
  /car-medias:
    get:
      operationId: car_medias_list
      description: List car medias
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - car-medias
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCarMediaList'
          description: ''
  /cars:
    get:
      operationId: cars_list
      description: List cars
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - cars
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCarList'
          description: ''
  /cars/{id}:
    get:
      operationId: cars_retrieve
      description: Retrieve a car instance
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - cars
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car'
          description: ''
  /customers/me:
    get:
      operationId: customers_me_retrieve
      description: Retrieve the customer instance from current authenticated user
      tags:
      - customers
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
components:
  schemas:
    AddressCountryEnum:
      enum:
      - AF
      - AX
      - AL
      - DZ
      - AS
      - AD
      - AO
      - AI
      - AQ
      - AG
      - AR
      - AM
      - AW
      - AU
      - AT
      - AZ
      - BS
      - BH
      - BD
      - BB
      - BY
      - BE
      - BZ
      - BJ
      - BM
      - BT
      - BO
      - BQ
      - BA
      - BW
      - BV
      - BR
      - IO
      - BN
      - BG
      - BF
      - BI
      - CV
      - KH
      - CM
      - CA
      - KY
      - CF
      - TD
      - CL
      - CN
      - CX
      - CC
      - CO
      - KM
      - CG
      - CD
      - CK
      - CR
      - CI
      - HR
      - CU
      - CW
      - CY
      - CZ
      - DK
      - DJ
      - DM
      - DO
      - EC
      - EG
      - SV
      - GQ
      - ER
      - EE
      - SZ
      - ET
      - FK
      - FO
      - FJ
      - FI
      - FR
      - GF
      - PF
      - TF
      - GA
      - GM
      - GE
      - DE
      - GH
      - GI
      - GR
      - GL
      - GD
      - GP
      - GU
      - GT
      - GG
      - GN
      - GW
      - GY
      - HT
      - HM
      - VA
      - HN
      - HK
      - HU
      - IS
      - IN
      - ID
      - IR
      - IQ
      - IE
      - IM
      - IL
      - IT
      - JM
      - JP
      - JE
      - JO
      - KZ
      - KE
      - KI
      - KW
      - KG
      - LA
      - LV
      - LB
      - LS
      - LR
      - LY
      - LI
      - LT
      - LU
      - MO
      - MG
      - MW
      - MY
      - MV
      - ML
      - MT
      - MH
      - MQ
      - MR
      - MU
      - YT
      - MX
      - FM
      - MD
      - MC
      - MN
      - ME
      - MS
      - MA
      - MZ
      - MM
      - NA
      - NR
      - NP
      - NL
      - NC
      - NZ
      - NI
      - NE
      - NG
      - NU
      - NF
      - KP
      - MK
      - MP
      - 'NO'
      - OM
      - PK
      - PW
      - PS
      - PA
      - PG
      - PY
      - PE
      - PH
      - PN
      - PL
      - PT
      - PR
      - QA
      - RE
      - RO
      - RU
      - RW
      - BL
      - SH
      - KN
      - LC
      - MF
      - PM
      - VC
      - WS
      - SM
      - ST
      - SA
      - SN
      - RS
      - SC
      - SL
      - SG
      - SX
      - SK
      - SI
      - SB
      - SO
      - ZA
      - GS
      - KR
      - SS
      - ES
      - LK
      - SD
      - SR
      - SJ
      - SE
      - CH
      - SY
      - TW
      - TJ
      - TZ
      - TH
      - TL
      - TG
      - TK
      - TO
      - TT
      - TN
      - TR
      - TM
      - TC
      - TV
      - UG
      - UA
      - AE
      - GB
      - UM
      - US
      - UY
      - UZ
      - VU
      - VE
      - VN
      - VG
      - VI
      - WF
      - EH
      - YE
      - ZM
      - ZW
      type: string
      description: |-
        * `AF` - Afghanistan
        * `AX` - Åland Islands
        * `AL` - Albania
        * `DZ` - Algeria
        * `AS` - American Samoa
        * `AD` - Andorra
        * `AO` - Angola
        * `AI` - Anguilla
        * `AQ` - Antarctica
        * `AG` - Antigua and Barbuda
        * `AR` - Argentina
        * `AM` - Armenia
        * `AW` - Aruba
        * `AU` - Australia
        * `AT` - Austria
        * `AZ` - Azerbaijan
        * `BS` - Bahamas
        * `BH` - Bahrain
        * `BD` - Bangladesh
        * `BB` - Barbados
        * `BY` - Belarus
        * `BE` - Belgium
        * `BZ` - Belize
        * `BJ` - Benin
        * `BM` - Bermuda
        * `BT` - Bhutan
        * `BO` - Bolivia
        * `BQ` - Bonaire, Sint Eustatius and Saba
        * `BA` - Bosnia and Herzegovina
        * `BW` - Botswana
        * `BV` - Bouvet Island
        * `BR` - Brazil
        * `IO` - British Indian Ocean Territory
        * `BN` - Brunei
        * `BG` - Bulgaria
        * `BF` - Burkina Faso
        * `BI` - Burundi
        * `CV` - Cabo Verde
        * `KH` - Cambodia
        * `CM` - Cameroon
        * `CA` - Canada
        * `KY` - Cayman Islands
        * `CF` - Central African Republic
        * `TD` - Chad
        * `CL` - Chile
        * `CN` - China
        * `CX` - Christmas Island
        * `CC` - Cocos (Keeling) Islands
        * `CO` - Colombia
        * `KM` - Comoros
        * `CG` - Congo
        * `CD` - Congo (the Democratic Republic of the)
        * `CK` - Cook Islands
        * `CR` - Costa Rica
        * `CI` - Côte d'Ivoire
        * `HR` - Croatia
        * `CU` - Cuba
        * `CW` - Curaçao
        * `CY` - Cyprus
        * `CZ` - Czechia
        * `DK` - Denmark
        * `DJ` - Djibouti
        * `DM` - Dominica
        * `DO` - Dominican Republic
        * `EC` - Ecuador
        * `EG` - Egypt
        * `SV` - El Salvador
        * `GQ` - Equatorial Guinea
        * `ER` - Eritrea
        * `EE` - Estonia
        * `SZ` - Eswatini
        * `ET` - Ethiopia
        * `FK` - Falkland Islands (Malvinas)
        * `FO` - Faroe Islands
        * `FJ` - Fiji
        * `FI` - Finland
        * `FR` - France
        * `GF` - French Guiana
        * `PF` - French Polynesia
        * `TF` - French Southern Territories
        * `GA` - Gabon
        * `GM` - Gambia
        * `GE` - Georgia
        * `DE` - Germany
        * `GH` - Ghana
        * `GI` - Gibraltar
        * `GR` - Greece
        * `GL` - Greenland
        * `GD` - Grenada
        * `GP` - Guadeloupe
        * `GU` - Guam
        * `GT` - Guatemala
        * `GG` - Guernsey
        * `GN` - Guinea
        * `GW` - Guinea-Bissau
        * `GY` - Guyana
        * `HT` - Haiti
        * `HM` - Heard Island and McDonald Islands
        * `VA` - Holy See
        * `HN` - Honduras
        * `HK` - Hong Kong
        * `HU` - Hungary
        * `IS` - Iceland
        * `IN` - India
        * `ID` - Indonesia
        * `IR` - Iran
        * `IQ` - Iraq
        * `IE` - Ireland
        * `IM` - Isle of Man
        * `IL` - Israel
        * `IT` - Italy
        * `JM` - Jamaica
        * `JP` - Japan
        * `JE` - Jersey
        * `JO` - Jordan
        * `KZ` - Kazakhstan
        * `KE` - Kenya
        * `KI` - Kiribati
        * `KW` - Kuwait
        * `KG` - Kyrgyzstan
        * `LA` - Laos
        * `LV` - Latvia
        * `LB` - Lebanon
        * `LS` - Lesotho
        * `LR` - Liberia
        * `LY` - Libya
        * `LI` - Liechtenstein
        * `LT` - Lithuania
        * `LU` - Luxembourg
        * `MO` - Macao
        * `MG` - Madagascar
        * `MW` - Malawi
        * `MY` - Malaysia
        * `MV` - Maldives
        * `ML` - Mali
        * `MT` - Malta
        * `MH` - Marshall Islands
        * `MQ` - Martinique
        * `MR` - Mauritania
        * `MU` - Mauritius
        * `YT` - Mayotte
        * `MX` - Mexico
        * `FM` - Micronesia
        * `MD` - Moldova
        * `MC` - Monaco
        * `MN` - Mongolia
        * `ME` - Montenegro
        * `MS` - Montserrat
        * `MA` - Morocco
        * `MZ` - Mozambique
        * `MM` - Myanmar
        * `NA` - Namibia
        * `NR` - Nauru
        * `NP` - Nepal
        * `NL` - Netherlands
        * `NC` - New Caledonia
        * `NZ` - New Zealand
        * `NI` - Nicaragua
        * `NE` - Niger
        * `NG` - Nigeria
        * `NU` - Niue
        * `NF` - Norfolk Island
        * `KP` - North Korea
        * `MK` - North Macedonia
        * `MP` - Northern Mariana Islands
        * `NO` - Norway
        * `OM` - Oman
        * `PK` - Pakistan
        * `PW` - Palau
        * `PS` - Palestine, State of
        * `PA` - Panama
        * `PG` - Papua New Guinea
        * `PY` - Paraguay
        * `PE` - Peru
        * `PH` - Philippines
        * `PN` - Pitcairn
        * `PL` - Poland
        * `PT` - Portugal
        * `PR` - Puerto Rico
        * `QA` - Qatar
        * `RE` - Réunion
        * `RO` - Romania
        * `RU` - Russia
        * `RW` - Rwanda
        * `BL` - Saint Barthélemy
        * `SH` - Saint Helena, Ascension and Tristan da Cunha
        * `KN` - Saint Kitts and Nevis
        * `LC` - Saint Lucia
        * `MF` - Saint Martin (French part)
        * `PM` - Saint Pierre and Miquelon
        * `VC` - Saint Vincent and the Grenadines
        * `WS` - Samoa
        * `SM` - San Marino
        * `ST` - Sao Tome and Principe
        * `SA` - Saudi Arabia
        * `SN` - Senegal
        * `RS` - Serbia
        * `SC` - Seychelles
        * `SL` - Sierra Leone
        * `SG` - Singapore
        * `SX` - Sint Maarten (Dutch part)
        * `SK` - Slovakia
        * `SI` - Slovenia
        * `SB` - Solomon Islands
        * `SO` - Somalia
        * `ZA` - South Africa
        * `GS` - South Georgia and the South Sandwich Islands
        * `KR` - South Korea
        * `SS` - South Sudan
        * `ES` - Spain
        * `LK` - Sri Lanka
        * `SD` - Sudan
        * `SR` - Suriname
        * `SJ` - Svalbard and Jan Mayen
        * `SE` - Sweden
        * `CH` - Switzerland
        * `SY` - Syria
        * `TW` - Taiwan
        * `TJ` - Tajikistan
        * `TZ` - Tanzania
        * `TH` - Thailand
        * `TL` - Timor-Leste
        * `TG` - Togo
        * `TK` - Tokelau
        * `TO` - Tonga
        * `TT` - Trinidad and Tobago
        * `TN` - Tunisia
        * `TR` - Türkiye
        * `TM` - Turkmenistan
        * `TC` - Turks and Caicos Islands
        * `TV` - Tuvalu
        * `UG` - Uganda
        * `UA` - Ukraine
        * `AE` - United Arab Emirates
        * `GB` - United Kingdom
        * `UM` - United States Minor Outlying Islands
        * `US` - United States of America
        * `UY` - Uruguay
        * `UZ` - Uzbekistan
        * `VU` - Vanuatu
        * `VE` - Venezuela
        * `VN` - Vietnam
        * `VG` - Virgin Islands (British)
        * `VI` - Virgin Islands (U.S.)
        * `WF` - Wallis and Futuna
        * `EH` - Western Sahara
        * `YE` - Yemen
        * `ZM` - Zambia
        * `ZW` - Zimbabwe
    Booking:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          writeOnly: true
        first_name:
          type: string
          writeOnly: true
        last_name:
          type: string
          writeOnly: true
        address_line1:
          type: string
          writeOnly: true
        address_line2:
          type: string
          writeOnly: true
          nullable: true
        address_city:
          type: string
          writeOnly: true
        address_postal_code:
          type: string
          writeOnly: true
        address_state:
          type: string
          writeOnly: true
          nullable: true
        address_country:
          allOf:
          - $ref: '#/components/schemas/AddressCountryEnum'
          writeOnly: true
        phone:
          type: string
          writeOnly: true
        passport:
          type: string
          writeOnly: true
          nullable: true
        start_date:
          type: string
          format: date-time
          description: The start date of the booking
        end_date:
          type: string
          format: date-time
          description: The end date of the booking
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          readOnly: true
          description: |-
            The current booking status

            * `COMPLETED` - Completed
            * `CONFIRMED` - Confirmed
            * `CANCELED_BY_STAFF` - Canceled By Staff
            * `CANCELED_BY_CUSTOMER` - Canceled By Customer
        created_at:
          type: string
          format: date-time
          description: The creation date of the booking
        car:
          type: integer
          description: The car linked to the booking
        customer:
          type: integer
          readOnly: true
          description: The customer linked to the booking
      required:
      - address_city
      - address_country
      - address_line1
      - address_postal_code
      - car
      - customer
      - email
      - end_date
      - first_name
      - id
      - last_name
      - phone
      - start_date
      - status
    CallbackTokenAuth:
      type: object
      description: |-
        Abstract class inspired by DRF's own token serializer.
        Returns a user if valid, None or a message if not.
      properties:
        email:
          type: string
          format: email
        mobile:
          type: string
          pattern: ^\+[1-9]\d{1,14}$
          maxLength: 17
        token:
          type: string
          maxLength: 6
          minLength: 6
      required:
      - token
    CallbackTokenVerification:
      type: object
      description: |-
        Takes a user and a token, verifies the token belongs to the user and
        validates the alias that the token was sent from.
      properties:
        email:
          type: string
          format: email
        mobile:
          type: string
          pattern: ^\+[1-9]\d{1,14}$
          maxLength: 17
        token:
          type: string
          maxLength: 6
          minLength: 6
      required:
      - token
    Car:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        make:
          allOf:
          - $ref: '#/components/schemas/MakeEnum'
          description: |-
            The car brand

            * `HONDA` - Honda
            * `MAZDA` - Mazda
            * `MITSUBISHI` - Mitsubishi
            * `SUBARU` - Subaru
        model:
          type: string
          description: The car model
          maxLength: 50
        slug:
          type: string
          description: Slugified combination of make and model
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        capacity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: The total passenger capacity
        transmission:
          allOf:
          - $ref: '#/components/schemas/TransmissionEnum'
          description: |-
            The car transmission

            * `AT` - Automatic
            * `MT` - Manual
        drivetrain:
          allOf:
          - $ref: '#/components/schemas/DrivetrainEnum'
          description: |-
            The car drivetrain

            * `AWD` - All Wheel Drive
            * `4WD` - Four Wheel Drive
            * `FWD` - Front Wheel Drive
            * `RWD` - Rear Wheel Drive
        fuel_type:
          allOf:
          - $ref: '#/components/schemas/FuelTypeEnum'
          description: |-
            The car fuel type

            * `B` - Bensin
            * `G91` - Gasohol 91
            * `G95` - Gasohol 95
            * `GE20` - Gasohol E20
            * `GE85` - Gasohol E85
            * `PB` - Premium Bensin
        fuel_consumption_metric:
          type: number
          format: double
          description: The fuel efficiency, represented in liters per 100km (L/100km)
        engine_code:
          type: string
          description: The car engine identifier
          maxLength: 12
        power_hp:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: The engine power in HP
        power_max_rpm:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: The engine max RPM for the given power
        price_hourly_cents:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: The hourly rate of a rental, in cents
        price_9_hours_cents:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: The price for a 9 hours rental, in cents
        price_12_hours_cents:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: The price for a 12 hours rental, in cents
        price_24_hours_cents:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: The price for a 24 hours rental, in cents
        created_at:
          type: string
          format: date-time
          description: The creation date of the car object
        updated_at:
          type: string
          format: date-time
          nullable: true
          description: The last updated date of the car object
        features:
          type: array
          items:
            type: integer
      required:
      - capacity
      - drivetrain
      - engine_code
      - features
      - fuel_consumption_metric
      - fuel_type
      - id
      - make
      - model
      - name
      - power_hp
      - power_max_rpm
      - price_12_hours_cents
      - price_24_hours_cents
      - price_9_hours_cents
      - price_hourly_cents
      - slug
      - transmission
    CarFeature:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          allOf:
          - $ref: '#/components/schemas/NameEnum'
          description: |-
            The name of the car feature

            * `AIRBAG` - Airbag
            * `AIR_CONDITIONING` - Air Conditioning
            * `ABS` - Anti Lock Breaking System
            * `ASSISTED_STEERING` - Assisted Steering
            * `BLUETOOTH` - Bluetooth
            * `DASH_CAM` - Dash Cam
            * `DRIVE_MODES` - Drive Modes
            * `ESC` - Electronic Stability Control
            * `GPS_NAVIGATION` - Gps Navigation
            * `KEYLESS_ENTRY` - Keyless Entry
            * `LED_HEADLIGHTS` - Led Headlights
            * `POP_UP_HEADLIGHTS` - Pop Up Headlights
            * `POWERED_WINDOWS` - Powered Windows
            * `REAR_CAMERA` - Rear Camera
            * `USB_PORTS` - Usb Ports
        created_at:
          type: string
          format: date-time
          description: The creation date of the feature object
      required:
      - id
      - name
    CarMedia:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          description: The full path of the resource
          maxLength: 200
        is_thumbnail:
          type: boolean
          description: When set to True, the media is used as the car thumbnail
        created_at:
          type: string
          format: date-time
          description: The creation date of the media object
        car:
          type: integer
          nullable: true
          description: The car linked to the media
      required:
      - id
      - is_thumbnail
      - url
    Customer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          description: The customer's first name
          maxLength: 50
        last_name:
          type: string
          description: The customer's last name
          maxLength: 50
        address_line1:
          type: string
          description: Address line 1 (e.g. street)
          maxLength: 100
        address_line2:
          type: string
          nullable: true
          description: Address line 2 (e.g. apartment, suite, building)
          maxLength: 100
        address_city:
          type: string
          description: City, district, suburb, town or village
          maxLength: 100
        address_postal_code:
          type: string
          description: ZIP or postal code
          maxLength: 10
        address_state:
          type: string
          nullable: true
          description: State, county, province or region
          maxLength: 50
        address_country:
          allOf:
          - $ref: '#/components/schemas/AddressCountryEnum'
          description: |-
            Customer's country of residence

            * `AF` - Afghanistan
            * `AX` - Åland Islands
            * `AL` - Albania
            * `DZ` - Algeria
            * `AS` - American Samoa
            * `AD` - Andorra
            * `AO` - Angola
            * `AI` - Anguilla
            * `AQ` - Antarctica
            * `AG` - Antigua and Barbuda
            * `AR` - Argentina
            * `AM` - Armenia
            * `AW` - Aruba
            * `AU` - Australia
            * `AT` - Austria
            * `AZ` - Azerbaijan
            * `BS` - Bahamas
            * `BH` - Bahrain
            * `BD` - Bangladesh
            * `BB` - Barbados
            * `BY` - Belarus
            * `BE` - Belgium
            * `BZ` - Belize
            * `BJ` - Benin
            * `BM` - Bermuda
            * `BT` - Bhutan
            * `BO` - Bolivia
            * `BQ` - Bonaire, Sint Eustatius and Saba
            * `BA` - Bosnia and Herzegovina
            * `BW` - Botswana
            * `BV` - Bouvet Island
            * `BR` - Brazil
            * `IO` - British Indian Ocean Territory
            * `BN` - Brunei
            * `BG` - Bulgaria
            * `BF` - Burkina Faso
            * `BI` - Burundi
            * `CV` - Cabo Verde
            * `KH` - Cambodia
            * `CM` - Cameroon
            * `CA` - Canada
            * `KY` - Cayman Islands
            * `CF` - Central African Republic
            * `TD` - Chad
            * `CL` - Chile
            * `CN` - China
            * `CX` - Christmas Island
            * `CC` - Cocos (Keeling) Islands
            * `CO` - Colombia
            * `KM` - Comoros
            * `CG` - Congo
            * `CD` - Congo (the Democratic Republic of the)
            * `CK` - Cook Islands
            * `CR` - Costa Rica
            * `CI` - Côte d'Ivoire
            * `HR` - Croatia
            * `CU` - Cuba
            * `CW` - Curaçao
            * `CY` - Cyprus
            * `CZ` - Czechia
            * `DK` - Denmark
            * `DJ` - Djibouti
            * `DM` - Dominica
            * `DO` - Dominican Republic
            * `EC` - Ecuador
            * `EG` - Egypt
            * `SV` - El Salvador
            * `GQ` - Equatorial Guinea
            * `ER` - Eritrea
            * `EE` - Estonia
            * `SZ` - Eswatini
            * `ET` - Ethiopia
            * `FK` - Falkland Islands (Malvinas)
            * `FO` - Faroe Islands
            * `FJ` - Fiji
            * `FI` - Finland
            * `FR` - France
            * `GF` - French Guiana
            * `PF` - French Polynesia
            * `TF` - French Southern Territories
            * `GA` - Gabon
            * `GM` - Gambia
            * `GE` - Georgia
            * `DE` - Germany
            * `GH` - Ghana
            * `GI` - Gibraltar
            * `GR` - Greece
            * `GL` - Greenland
            * `GD` - Grenada
            * `GP` - Guadeloupe
            * `GU` - Guam
            * `GT` - Guatemala
            * `GG` - Guernsey
            * `GN` - Guinea
            * `GW` - Guinea-Bissau
            * `GY` - Guyana
            * `HT` - Haiti
            * `HM` - Heard Island and McDonald Islands
            * `VA` - Holy See
            * `HN` - Honduras
            * `HK` - Hong Kong
            * `HU` - Hungary
            * `IS` - Iceland
            * `IN` - India
            * `ID` - Indonesia
            * `IR` - Iran
            * `IQ` - Iraq
            * `IE` - Ireland
            * `IM` - Isle of Man
            * `IL` - Israel
            * `IT` - Italy
            * `JM` - Jamaica
            * `JP` - Japan
            * `JE` - Jersey
            * `JO` - Jordan
            * `KZ` - Kazakhstan
            * `KE` - Kenya
            * `KI` - Kiribati
            * `KW` - Kuwait
            * `KG` - Kyrgyzstan
            * `LA` - Laos
            * `LV` - Latvia
            * `LB` - Lebanon
            * `LS` - Lesotho
            * `LR` - Liberia
            * `LY` - Libya
            * `LI` - Liechtenstein
            * `LT` - Lithuania
            * `LU` - Luxembourg
            * `MO` - Macao
            * `MG` - Madagascar
            * `MW` - Malawi
            * `MY` - Malaysia
            * `MV` - Maldives
            * `ML` - Mali
            * `MT` - Malta
            * `MH` - Marshall Islands
            * `MQ` - Martinique
            * `MR` - Mauritania
            * `MU` - Mauritius
            * `YT` - Mayotte
            * `MX` - Mexico
            * `FM` - Micronesia
            * `MD` - Moldova
            * `MC` - Monaco
            * `MN` - Mongolia
            * `ME` - Montenegro
            * `MS` - Montserrat
            * `MA` - Morocco
            * `MZ` - Mozambique
            * `MM` - Myanmar
            * `NA` - Namibia
            * `NR` - Nauru
            * `NP` - Nepal
            * `NL` - Netherlands
            * `NC` - New Caledonia
            * `NZ` - New Zealand
            * `NI` - Nicaragua
            * `NE` - Niger
            * `NG` - Nigeria
            * `NU` - Niue
            * `NF` - Norfolk Island
            * `KP` - North Korea
            * `MK` - North Macedonia
            * `MP` - Northern Mariana Islands
            * `NO` - Norway
            * `OM` - Oman
            * `PK` - Pakistan
            * `PW` - Palau
            * `PS` - Palestine, State of
            * `PA` - Panama
            * `PG` - Papua New Guinea
            * `PY` - Paraguay
            * `PE` - Peru
            * `PH` - Philippines
            * `PN` - Pitcairn
            * `PL` - Poland
            * `PT` - Portugal
            * `PR` - Puerto Rico
            * `QA` - Qatar
            * `RE` - Réunion
            * `RO` - Romania
            * `RU` - Russia
            * `RW` - Rwanda
            * `BL` - Saint Barthélemy
            * `SH` - Saint Helena, Ascension and Tristan da Cunha
            * `KN` - Saint Kitts and Nevis
            * `LC` - Saint Lucia
            * `MF` - Saint Martin (French part)
            * `PM` - Saint Pierre and Miquelon
            * `VC` - Saint Vincent and the Grenadines
            * `WS` - Samoa
            * `SM` - San Marino
            * `ST` - Sao Tome and Principe
            * `SA` - Saudi Arabia
            * `SN` - Senegal
            * `RS` - Serbia
            * `SC` - Seychelles
            * `SL` - Sierra Leone
            * `SG` - Singapore
            * `SX` - Sint Maarten (Dutch part)
            * `SK` - Slovakia
            * `SI` - Slovenia
            * `SB` - Solomon Islands
            * `SO` - Somalia
            * `ZA` - South Africa
            * `GS` - South Georgia and the South Sandwich Islands
            * `KR` - South Korea
            * `SS` - South Sudan
            * `ES` - Spain
            * `LK` - Sri Lanka
            * `SD` - Sudan
            * `SR` - Suriname
            * `SJ` - Svalbard and Jan Mayen
            * `SE` - Sweden
            * `CH` - Switzerland
            * `SY` - Syria
            * `TW` - Taiwan
            * `TJ` - Tajikistan
            * `TZ` - Tanzania
            * `TH` - Thailand
            * `TL` - Timor-Leste
            * `TG` - Togo
            * `TK` - Tokelau
            * `TO` - Tonga
            * `TT` - Trinidad and Tobago
            * `TN` - Tunisia
            * `TR` - Türkiye
            * `TM` - Turkmenistan
            * `TC` - Turks and Caicos Islands
            * `TV` - Tuvalu
            * `UG` - Uganda
            * `UA` - Ukraine
            * `AE` - United Arab Emirates
            * `GB` - United Kingdom
            * `UM` - United States Minor Outlying Islands
            * `US` - United States of America
            * `UY` - Uruguay
            * `UZ` - Uzbekistan
            * `VU` - Vanuatu
            * `VE` - Venezuela
            * `VN` - Vietnam
            * `VG` - Virgin Islands (British)
            * `VI` - Virgin Islands (U.S.)
            * `WF` - Wallis and Futuna
            * `EH` - Western Sahara
            * `YE` - Yemen
            * `ZM` - Zambia
            * `ZW` - Zimbabwe
        phone:
          type: string
          description: Customer's phone number
          maxLength: 50
        passport:
          type: string
          nullable: true
          description: Customer's passport number if not Thai citizen
          maxLength: 50
        created_at:
          type: string
          format: date-time
          description: The creation date of the customer
        user:
          type: integer
          description: The user linked to the customer
      required:
      - address_city
      - address_country
      - address_line1
      - address_postal_code
      - first_name
      - id
      - last_name
      - phone
      - user
    DrivetrainEnum:
      enum:
      - AWD
      - 4WD
      - FWD
      - RWD
      type: string
      description: |-
        * `AWD` - All Wheel Drive
        * `4WD` - Four Wheel Drive
        * `FWD` - Front Wheel Drive
        * `RWD` - Rear Wheel Drive
    EmailAuth:
      type: object
      description: |-
        Abstract class that returns a callback token based on the field given
        Returns a token if valid, None or a message if not.
      properties:
        email:
          type: string
          format: email
      required:
      - email
    FuelTypeEnum:
      enum:
      - B
      - G91
      - G95
      - GE20
      - GE85
      - PB
      type: string
      description: |-
        * `B` - Bensin
        * `G91` - Gasohol 91
        * `G95` - Gasohol 95
        * `GE20` - Gasohol E20
        * `GE85` - Gasohol E85
        * `PB` - Premium Bensin
    MakeEnum:
      enum:
      - HONDA
      - MAZDA
      - MITSUBISHI
      - SUBARU
      type: string
      description: |-
        * `HONDA` - Honda
        * `MAZDA` - Mazda
        * `MITSUBISHI` - Mitsubishi
        * `SUBARU` - Subaru
    MobileAuth:
      type: object
      description: |-
        Abstract class that returns a callback token based on the field given
        Returns a token if valid, None or a message if not.
      properties:
        mobile:
          type: string
          pattern: ^\+[1-9]\d{1,14}$
          maxLength: 17
      required:
      - mobile
    NameEnum:
      enum:
      - AIRBAG
      - AIR_CONDITIONING
      - ABS
      - ASSISTED_STEERING
      - BLUETOOTH
      - DASH_CAM
      - DRIVE_MODES
      - ESC
      - GPS_NAVIGATION
      - KEYLESS_ENTRY
      - LED_HEADLIGHTS
      - POP_UP_HEADLIGHTS
      - POWERED_WINDOWS
      - REAR_CAMERA
      - USB_PORTS
      type: string
      description: |-
        * `AIRBAG` - Airbag
        * `AIR_CONDITIONING` - Air Conditioning
        * `ABS` - Anti Lock Breaking System
        * `ASSISTED_STEERING` - Assisted Steering
        * `BLUETOOTH` - Bluetooth
        * `DASH_CAM` - Dash Cam
        * `DRIVE_MODES` - Drive Modes
        * `ESC` - Electronic Stability Control
        * `GPS_NAVIGATION` - Gps Navigation
        * `KEYLESS_ENTRY` - Keyless Entry
        * `LED_HEADLIGHTS` - Led Headlights
        * `POP_UP_HEADLIGHTS` - Pop Up Headlights
        * `POWERED_WINDOWS` - Powered Windows
        * `REAR_CAMERA` - Rear Camera
        * `USB_PORTS` - Usb Ports
    PaginatedBookingList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Booking'
    PaginatedCarFeatureList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CarFeature'
    PaginatedCarList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Car'
    PaginatedCarMediaList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CarMedia'
    StatusEnum:
      enum:
      - COMPLETED
      - CONFIRMED
      - CANCELED_BY_STAFF
      - CANCELED_BY_CUSTOMER
      type: string
      description: |-
        * `COMPLETED` - Completed
        * `CONFIRMED` - Confirmed
        * `CANCELED_BY_STAFF` - Canceled By Staff
        * `CANCELED_BY_CUSTOMER` - Canceled By Customer
    TransmissionEnum:
      enum:
      - AT
      - MT
      type: string
      description: |-
        * `AT` - Automatic
        * `MT` - Manual
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
